---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app affine
spec:
  interval: 30m
  maxHistory: 3
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: crunchy-postgres-operator
      namespace: database
    - name: dragonfly-operator
      namespace: database
  values:
    controllers:
      affine:
        annotations:
          reloader.stakater.com/auto: 'true'
        strategy: Recreate
        initContainers:
          migration:
            image: &image
              repository: ghcr.io/toeverything/affine
              tag: 0.24.0@sha256:53f34ee23029ac18caae14ab12f05a0043e9c8f4b93e051c2431f3092306bcd5
            command: ['sh', '-c', 'node ./scripts/self-host-predeploy.js']
            env: &env
              PORT: &port 3010
              REDIS_SERVER_HOST: "dragonfly.database.svc.cluster.local"
              AFFINE_SERVER_HOST: &host affine.${SECRET_DOMAIN}
              AFFINE_INDEXER_ENABLED: false
              DB_DATA_LOCATION: /data/database
              UPLOAD_LOCATION: /data/uploads
              CONFIG_LOCATION: /data/config
            envFrom: &envFrom
              - secretRef:
                  name: affine-secret
        containers:
          app:
            image: *image
            env: *env
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 2048Mi
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: [*host]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /data
